MODULE main
VAR
    --states
    state: {systemOff, safe, hazard, sensorFailure, powerFailure,hazardVoltageDrop};
    
    --outputs
    power: boolean;
    alarm: boolean;
    police: boolean;
    servicetechnican: boolean;
    batterybackup: boolean;
    lights: boolean;

    --inputs
    Button: boolean;
    Sensor:boolean;
    SensorMalfunction: boolean;
    deviceMalfunction: boolean;
    
    
ASSIGN
    --state
    init(state):= systemOff;
    --inputs
    init(Button):= FALSE;
    init(Sensor):= FALSE;
    init(SensorMalfunction):= FALSE;
    init(deviceMalfunction):= FALSE;
    --outputs
    init(power):= FALSE;
    init(alarm):= FALSE;
    init(police):= FALSE;
    init(servicetechnican):= FALSE;
    init(batterybackup):= FALSE;
    init(lights):= FALSE;

    next(state) := case
                        state=systemOff&Button :    safe; --system turned on
                        state=safe&!Button :        systemOff;--system turnedoff 
                        
                        state=safe&Sensor&!SensorMalfunction&Button&!deviceMalfunction :   hazard;--hazard noticed
                        state=hazard&!Button :      systemOff;--manual shutdown from hazard state
                        
                        state=safe&SensorMalfunction&!Sensor&Button&!deviceMalfunction:   sensorFailure;--sensor failed 
                        state=sensorFailure&!Button :   systemOff;--manual shutdown from sensor failure state
                        
                        state=safe&deviceMalfunction&!Sensor&!SensorMalfunction&Button: powerFailure; --device failed causing powerfailure
                        TRUE: state;
                        esac;
    --inputs
    next(Sensor):= case
                        state=systemOff :   FALSE;
                        next(state)=systemOff :   FALSE;
                        next(state)=safe :  {TRUE,FALSE};                
                        next(state)=hazard: TRUE;
                        next(state)=sensorFailure: FALSE;
                        TRUE: Sensor;
                        esac;

    next(deviceMalfunction):= case
                        state=systemOff :   FALSE;
                        next(state)=systemOff :   FALSE;
                        next(state)=safe :  !next(Sensor);
                        next(state)=hazard: FALSE;
                        next(state)=sensorFailure: TRUE;                
                        TRUE: SensorMalfunction;
                        esac;

    next(SensorMalfunction):= case
                        state=systemOff :   FALSE;
                        next(state)=systemOff :   FALSE;
                        next(state)=safe :  !next(Sensor);
                        next(state)=hazard: FALSE;
                        next(state)=sensorFailure: TRUE;                
                        TRUE: SensorMalfunction;
                        esac;

    next(power) := case
                        next(state) = systemOff:  FALSE;
                        next(state) = safe:       TRUE;
                        next(state) = hazard:     TRUE;
                        TRUE: power;
                        esac;
    --output
    next(alarm) := case
                        next(state) = systemOff:  FALSE;
                        next(state) = safe:       FALSE;
                        next(state) = hazard:     TRUE;
                        TRUE: alarm;
                        esac;

    next(police) := case
                        next(state) = systemOff:  FALSE;
                        next(state) = safe:       FALSE;
                        next(state) = hazard:     TRUE;
                        TRUE: police;
                        esac;

    next(servicetechnican) := case
                        next(state) = systemOff:  FALSE;
                        next(state) = safe:       FALSE;
                        next(state) = hazard:     FALSE;
                        TRUE: servicetechnican;
                        esac;
    
    next(batterybackup) := case
                        next(state) = systemOff:  FALSE;
                        next(state) = safe:       FALSE;
                        next(state) = hazard:     FALSE;
                        TRUE: batterybackup;
                        esac;

    next(lights) := case
                        next(state) = systemOff:  FALSE;
                        next(state) = safe:       FALSE;
                        next(state) = hazard:     TRUE;
                        TRUE: lights;
                        esac;

    